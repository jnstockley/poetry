name: Python 3.13

on:
  push:
    branches:
      - main
    paths:
      - Dockerfile313
      - requirements.txt
      - .github/workflows/deploy-3.13.yml
jobs:
  deploy:
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          check-latest: true

      - name: Get Python version
        id: get-python-version
        run: |
          PYTHON_VERSION=$(python --version | awk '{print $2}')
          echo "PYTHON_VERSION=$PYTHON_VERSION" >> $GITHUB_ENV

      - name: Get Poetry version
        id: get-poetry-version
        run: |
          pip install -r requirements.txt
          POETRY_VERSION=$(poetry --version | awk '{print $3}' | sed 's/)$//')
          echo "POETRY_VERSION=$POETRY_VERSION" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ACTIONS_GITHUB_TOKEN }}

      - name: Generate RFC 3339 datetime
        id: generate-datetime
        run: |
          RFC3339_DATETIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          echo "RFC3339_DATETIME=$RFC3339_DATETIME" >> $GITHUB_ENV

      - name: Get repository description
        id: get-repo-description
        uses: actions/github-script@v7.0.1
        with:
          script: |
            const repo = await github.repos.get({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            return repo.data.description;
          result-encoding: string

      - name: Update Docker Description and README
        uses: peter-evans/dockerhub-description@v4.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: jnstockley/poetry
          short-description: ${{ steps.get-repo-description.outputs.result }}

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile313
          platforms: linux/386,linux/amd64,linux/arm64
          push: true
          labels: |
            org.opencontainers.image.created=${{ env.RFC3339_DATETIME }}
            org.opencontainers.image.version=${{ env.POETRY_VERSION }}
            org.opencontainers.image.revision=${{ env.POETRY_VERSION }}-python${{ env.PYTHON_VERSION }}
            org.opencontainers.image.ref.name=${{ env.POETRY_VERSION }}
            org.opencontainers.image.description=Poetry ${{ env.POETRY_VERSION }} using Python ${{ env.PYTHON_VERSION }}

          tags: | 
            jnstockley/poetry:latest
            jnstockley/poetry:latest-python${{ env.PYTHON_VERSION }}
            jnstockley/poetry:${{ env.POETRY_VERSION }}-python${{ env.PYTHON_VERSION }}
            ghcr.io/jnstockley/poetry:latest
            ghcr.io/jnstockley/poetry:latest-python${{ env.PYTHON_VERSION }}
            ghcr.io/jnstockley/poetry:${{ env.POETRY_VERSION }}-python${{ env.PYTHON_VERSION }}
